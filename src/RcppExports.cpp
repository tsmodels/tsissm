// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// issestimation
Rcpp::List issestimation(NumericVector& f0_, NumericVector& f1_, NumericVector& f2_, NumericVector& w_, NumericVector& g_, NumericVector& y_, IntegerVector& mdim, NumericVector& lambda_, NumericVector& xreg_, NumericVector& kappa_, NumericVector& good_);
RcppExport SEXP _tsissm_issestimation(SEXP f0_SEXP, SEXP f1_SEXP, SEXP f2_SEXP, SEXP w_SEXP, SEXP g_SEXP, SEXP y_SEXP, SEXP mdimSEXP, SEXP lambda_SEXP, SEXP xreg_SEXP, SEXP kappa_SEXP, SEXP good_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type f0_(f0_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type f1_(f1_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type f2_(f2_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type g_(g_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type mdim(mdimSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type lambda_(lambda_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xreg_(xreg_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type kappa_(kappa_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type good_(good_SEXP);
    rcpp_result_gen = Rcpp::wrap(issestimation(f0_, f1_, f2_, w_, g_, y_, mdim, lambda_, xreg_, kappa_, good_));
    return rcpp_result_gen;
END_RCPP
}
// issfilter
Rcpp::List issfilter(NumericVector& f0_, NumericVector& f1_, NumericVector& f2_, NumericVector& w_, NumericVector& g_, NumericVector& y_, IntegerVector& mdim, NumericVector& lambda_, NumericVector& xreg_, NumericVector& kappa_, NumericVector& xseed_, NumericVector& good_);
RcppExport SEXP _tsissm_issfilter(SEXP f0_SEXP, SEXP f1_SEXP, SEXP f2_SEXP, SEXP w_SEXP, SEXP g_SEXP, SEXP y_SEXP, SEXP mdimSEXP, SEXP lambda_SEXP, SEXP xreg_SEXP, SEXP kappa_SEXP, SEXP xseed_SEXP, SEXP good_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type f0_(f0_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type f1_(f1_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type f2_(f2_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type g_(g_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type mdim(mdimSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type lambda_(lambda_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xreg_(xreg_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type kappa_(kappa_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xseed_(xseed_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type good_(good_SEXP);
    rcpp_result_gen = Rcpp::wrap(issfilter(f0_, f1_, f2_, w_, g_, y_, mdim, lambda_, xreg_, kappa_, xseed_, good_));
    return rcpp_result_gen;
END_RCPP
}
// isspredict
Rcpp::List isspredict(NumericVector& f0_, NumericVector& f1_, NumericVector& f2_, NumericVector& w_, NumericVector& g_, NumericVector& error_, IntegerVector& mdim, NumericVector& xreg_, NumericVector& kappa_, NumericVector& xseed_);
RcppExport SEXP _tsissm_isspredict(SEXP f0_SEXP, SEXP f1_SEXP, SEXP f2_SEXP, SEXP w_SEXP, SEXP g_SEXP, SEXP error_SEXP, SEXP mdimSEXP, SEXP xreg_SEXP, SEXP kappa_SEXP, SEXP xseed_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type f0_(f0_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type f1_(f1_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type f2_(f2_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type g_(g_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type error_(error_SEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type mdim(mdimSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xreg_(xreg_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type kappa_(kappa_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xseed_(xseed_SEXP);
    rcpp_result_gen = Rcpp::wrap(isspredict(f0_, f1_, f2_, w_, g_, error_, mdim, xreg_, kappa_, xseed_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tsissm_issestimation", (DL_FUNC) &_tsissm_issestimation, 11},
    {"_tsissm_issfilter", (DL_FUNC) &_tsissm_issfilter, 12},
    {"_tsissm_isspredict", (DL_FUNC) &_tsissm_isspredict, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_tsissm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
